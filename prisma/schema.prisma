// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id Int @id @default(autoincrement())
  name String @unique 
  login String @unique
  password String @unique
  role Role 
  uuid String @unique @default(uuid())
}

model Categories {
  id Int @id @default(autoincrement())
  name String @unique
  is_active Boolean @default(true)
  created_at DateTime @default(now())
  subcategories Subcategories[]
}

model Subcategories {
  id Int @id @default(autoincrement())
  name String @unique
  is_active Boolean @default(true)
  parametrs Json
  category_id Int 
  created_at DateTime @default(now())
  category Categories? @relation(fields: [category_id], references: [id], onUpdate:Cascade)
  products Products[]
}

model Products {
  id Int @id @default(autoincrement())
  name String
  uniqueid String @unique
  currency Currnecy @default(USD)
  buy_price Decimal
  sell_price Decimal
  parametrs Json
  photo String
  subcategory_id Int
  subcategory Subcategories @relation(fields: [subcategory_id], references: [id], onUpdate:Cascade)
  order Order?
}

model Order {
  id Int @id @default(autoincrement())
  price Decimal
  proc Decimal
  month Int
  vendor String
  payment_day Int
  is_loan Boolean
  comment String
  last_payment_date DateTime
  product_id Int @unique
  products Products? @relation(fields: [product_id], references: [id], onUpdate: Cascade)
  created_at DateTime @default(now())
}

enum Currnecy {
  USD
  UZS
}

enum Role {
  ADMIN
  USER
}